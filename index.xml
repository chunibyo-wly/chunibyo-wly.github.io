<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Chunibyo</title>
      <link>https://chunibyo-wly.github.io</link>
      <description>Last 10 notes on Chunibyo</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>A Survey on Data Compression Techniques for Automotive LiDAR Point Clouds</title>
    <link>https://chunibyo-wly.github.io/A-%E8%AE%BA%E6%96%87/A-Survey-on-Data-Compression-Techniques-for-Automotive-LiDAR-Point-Clouds</link>
    <guid>https://chunibyo-wly.github.io/A-%E8%AE%BA%E6%96%87/A-Survey-on-Data-Compression-Techniques-for-Automotive-LiDAR-Point-Clouds</guid>
    <description> Coding based § Format based § ![[E-通识/点云#[LASzip](https //www.youtube.com/watch?v=A0s0fVktj6U)|点云]] 2D based § Cartesian -&gt; Spherical Range image (r,θ,ϕ), pixel coordinate store value r 因为是线雷达所以假设旋转平面的坐标是稠密, 也就是 (θ,ϕ) 稠密 Intra-Frame JPEG Discrete Cosine Transform (DCT) Discrete Wavelet Transform (DWT) PNG Inter-Frame Log range images Layered range images 多张 range image 合并重整 3D based § G-PCC Tensor based §.</description>
    <pubDate>Tue, 22 Apr 2025 07:57:00 GMT</pubDate>
  </item><item>
    <title>点云</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/%E7%82%B9%E4%BA%91</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/%E7%82%B9%E4%BA%91</guid>
    <description>Chamfer Distance § d(A,B)=A∑​Bmin​∣∣a−b∣∣2+B∑​Amin​∣∣a−b∣∣2 A 点集每个点找 B点集内最近点的距离求和 + … Hausdorff distance § Directed Non-Symmetric h(A,B)=Amax​(Bmin​(∣∣a−b∣∣)) Symmetry H(A,B)=max(h(A,B),h(B,A)) 找到 B 点集每一个到 A 点集最近的点对, 然后取出这些点对的最大距离 LASzip § write header (uncompressed) *write points in “chunks” of 50,000 store first point raw (uncompressed) compress next point predict attributes that have changed return number, intensity, scan angle, … predict coordinates using Δx, Δy, z treat GPS time as integer, predict steps .</description>
    <pubDate>Tue, 22 Apr 2025 06:52:00 GMT</pubDate>
  </item><item>
    <title>CUDA</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/CUDA</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/CUDA</guid>
    <description># CUDA编程基础 (C++ programming) Built-in variables § threadIdx: thread index within Block blockIdx: block index within Grid blockDim: thread shape GridDim: grid shape global array id = blockIdx.</description>
    <pubDate>Mon, 10 Mar 2025 06:37:00 GMT</pubDate>
  </item><item>
    <title>HPC</title>
    <link>https://chunibyo-wly.github.io/D-HKU/HPC-%E4%BD%BF%E7%94%A8</link>
    <guid>https://chunibyo-wly.github.io/D-HKU/HPC-%E4%BD%BF%E7%94%A8</guid>
    <description>High Performance Computing.</description>
    <pubDate>Thu, 12 Dec 2024 16:08:00 GMT</pubDate>
  </item><item>
    <title>Llama</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/Llama</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/Llama</guid>
    <description>The open-source AI models you can fine-tune, distill and deploy anywhere. Choose from our collection of models: Llama 3.1, Llama 3.2, Llama 3.3.</description>
    <pubDate>Thu, 12 Dec 2024 02:09:00 GMT</pubDate>
  </item><item>
    <title>wsl</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/wsl</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/wsl</guid>
    <description>Daemon § Let wsl start without user login. Use tmux to create a fake window and keep writing Logs. &amp; &#039;C:\Program Files\WSL\wsl.exe&#039; -e /home/chunibyo/.</description>
    <pubDate>Sun, 27 Oct 2024 15:29:00 GMT</pubDate>
  </item><item>
    <title>CGAL</title>
    <link>https://chunibyo-wly.github.io/C-%E9%A1%B9%E7%9B%AE/CGAL</link>
    <guid>https://chunibyo-wly.github.io/C-%E9%A1%B9%E7%9B%AE/CGAL</guid>
    <description>The Computational Geometry Algorithms Library.</description>
    <pubDate>Fri, 25 Oct 2024 01:23:00 GMT</pubDate>
  </item><item>
    <title>微积分</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/%E5%BE%AE%E7%A7%AF%E5%88%86</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/%E5%BE%AE%E7%A7%AF%E5%88%86</guid>
    <description>链式法则 (Multi-variable Chain Rule) § 普通的链式法则 § dtdw​=dxdw​dtdx​ 多元函数链式法则 § 两个中间变量 + 一个独立变量 § dtdw​=∂x∂w​dtdx​+∂y∂w​dtdy​ 两个中间变量 + 两个独立变量 § drdw​=∂x∂w​∂r∂x​+∂y∂w​∂r∂y​ .</description>
    <pubDate>Sat, 05 Oct 2024 05:37:00 GMT</pubDate>
  </item><item>
    <title>SVG</title>
    <link>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/SVG</link>
    <guid>https://chunibyo-wly.github.io/E-%E9%80%9A%E8%AF%86/SVG</guid>
    <description>Scalable Vector Graphics.</description>
    <pubDate>Sat, 06 Apr 2024 14:12:00 GMT</pubDate>
  </item><item>
    <title>Symmetry Loss</title>
    <link>https://chunibyo-wly.github.io/A-%E8%AE%BA%E6%96%87/Symmetry-Loss</link>
    <guid>https://chunibyo-wly.github.io/A-%E8%AE%BA%E6%96%87/Symmetry-Loss</guid>
    <description> 度量对称轴将多边形切割成两份后的对称损失(SIou) L，令切分成两份的多边形面积分别为 S1​ 和 S2​ ，两个面积分别对其余凸包上的点求导。 L 对多边形上的点 x 坐标求偏导 S2​=S−S1​ L=(SS1​−S2​​)2=(S2S1​−S​)2 ∂L=2∗S2S1​−S​∗∂S2S1​−S​ ∂S2S1​−S​=∂(2SS1​​−1)=2S2∂S1​∗S−∂S∗S1​​ ∂L=4∗S3(2S1​−S)∗(∂S1​∗S−∂S∗S1​)​ 原版 GIoU 损失与梯度推导 S 表示预测凸包的面积, Sgt​ 表示真值面积(不会产生梯度), I 表示交集多边形面积, U 表示并集多边形面积 L=UI​−CC−U​=UI​+CU​−1 U=S+Sgt​−I ∂U=∂S−∂I ∂L=U2(∂I∗U−∂U∗I)​+C2∂U∗C−∂C∗U​ ∂L=U2(∂I∗U−(∂S−∂I)∗I)​+C∂S−∂I​−C2∂C∗U​ 将两者合并后损失和梯度可以分别表示为 L=GIoU−SIoU ∂L=∂LGIoU​−∂LSIoU​ 非独立自变量梯度计算 Transclude of 微积分#两个中间变量--一个独立变量 设预测点 P1​ 对称点 P2​=H(P1​) dp1​dIoU​=∂p1​∂IoU​dp1​dp1​​+∂p2​∂IoU​dp1​dp2​​=∂p1​∂IoU​+∂p2​∂IoU​⋅dp1​dp2​​ dp1​dIoU​.</description>
    <pubDate>Tue, 30 Jan 2024 12:23:00 GMT</pubDate>
  </item>
    </channel>
  </rss>